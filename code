import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Veriyi oku
tesla = pd.read_csv("C:/Users/onurs/Downloads/MSFT.csv")

# Tarih sütununu datetime tipine dönüştür
tesla['Date'] = pd.to_datetime(tesla['Date'])

# Tarih ve kapanış fiyatlarını ayır
X = tesla['Date'].map(pd.Timestamp.toordinal).values.reshape(-1, 1)
y = tesla['Close'].values

# Tarihleri yeniden ölçekle
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Veriyi eğitim ve test setlerine böl
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Karar ağacı regresyon modelini oluştur ve eğit
model = DecisionTreeRegressor(random_state=42)
model.fit(X_train, y_train)

# Tahmin yap
y_pred = model.predict(X_test)

# Performans ölçütlerini hesapla
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)

# Sonuçları yazdır
print("Mean Squared Error (MSE):", mse)
print("Root Mean Squared Error (RMSE):", rmse)
print("R² skoru:", r2)

# Tahminlerin ve gerçek değerlerin görselleştirilmesi
plt.scatter(X_test, y_test, color='black', label='Gerçek Değerler')
plt.scatter(X_test, y_pred, color='blue', label='Tahminler')
plt.xlabel('Date (Scaled)')
plt.ylabel('Close Price')
plt.title('Decision Tree Regression')
plt.legend()
plt.show()
